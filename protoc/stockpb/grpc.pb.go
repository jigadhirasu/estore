// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: stock/grpc.proto

package stockpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingPong) Reset() {
	*x = PingPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingPong) ProtoMessage() {}

func (x *PingPong) ProtoReflect() protoreflect.Message {
	mi := &file_stock_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingPong.ProtoReflect.Descriptor instead.
func (*PingPong) Descriptor() ([]byte, []int) {
	return file_stock_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *PingPong) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_stock_grpc_proto protoreflect.FileDescriptor

var file_stock_grpc_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x15, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x9e, 0x0b, 0x0a, 0x0b, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6e, 0x67, 0x1a, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6e, 0x67, 0x12, 0x50, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x46, 0x69, 0x6e,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x12, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x1b, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stock_grpc_proto_rawDescOnce sync.Once
	file_stock_grpc_proto_rawDescData = file_stock_grpc_proto_rawDesc
)

func file_stock_grpc_proto_rawDescGZIP() []byte {
	file_stock_grpc_proto_rawDescOnce.Do(func() {
		file_stock_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_stock_grpc_proto_rawDescData)
	})
	return file_stock_grpc_proto_rawDescData
}

var file_stock_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_stock_grpc_proto_goTypes = []interface{}{
	(*PingPong)(nil),                 // 0: stock.PingPong
	(*CreateCommodityRequest)(nil),   // 1: stock.CreateCommodityRequest
	(*UpdateCommodityRequest)(nil),   // 2: stock.UpdateCommodityRequest
	(*FindCommodityRequest)(nil),     // 3: stock.FindCommodityRequest
	(*CreateSpecRequest)(nil),        // 4: stock.CreateSpecRequest
	(*UpdateSpecRequest)(nil),        // 5: stock.UpdateSpecRequest
	(*FindSpecRequest)(nil),          // 6: stock.FindSpecRequest
	(*CreateSupplierRequest)(nil),    // 7: stock.CreateSupplierRequest
	(*UpdateSupplierRequest)(nil),    // 8: stock.UpdateSupplierRequest
	(*DeleteSupplierRequest)(nil),    // 9: stock.DeleteSupplierRequest
	(*FindSupplierRequest)(nil),      // 10: stock.FindSupplierRequest
	(*CreateStorehouseRequest)(nil),  // 11: stock.CreateStorehouseRequest
	(*UpdateStorehouseRequest)(nil),  // 12: stock.UpdateStorehouseRequest
	(*FindStorehouseRequest)(nil),    // 13: stock.FindStorehouseRequest
	(*CreatePurchaseRequest)(nil),    // 14: stock.CreatePurchaseRequest
	(*UpdatePurchaseRequest)(nil),    // 15: stock.UpdatePurchaseRequest
	(*FindPurchaseRequest)(nil),      // 16: stock.FindPurchaseRequest
	(*UpdateInventoryRequest)(nil),   // 17: stock.UpdateInventoryRequest
	(*FindInventoryRequest)(nil),     // 18: stock.FindInventoryRequest
	(*CreateCommodityResponse)(nil),  // 19: stock.CreateCommodityResponse
	(*UpdateCommodityResponse)(nil),  // 20: stock.UpdateCommodityResponse
	(*FindCommodityResponse)(nil),    // 21: stock.FindCommodityResponse
	(*CreateSpecResponse)(nil),       // 22: stock.CreateSpecResponse
	(*UpdateSpecResponse)(nil),       // 23: stock.UpdateSpecResponse
	(*FindSpecResponse)(nil),         // 24: stock.FindSpecResponse
	(*CreateSupplierResponse)(nil),   // 25: stock.CreateSupplierResponse
	(*UpdateSupplierResponse)(nil),   // 26: stock.UpdateSupplierResponse
	(*DeleteSupplierResponse)(nil),   // 27: stock.DeleteSupplierResponse
	(*FindSupplierResponse)(nil),     // 28: stock.FindSupplierResponse
	(*CreateStorehouseResponse)(nil), // 29: stock.CreateStorehouseResponse
	(*UpdateStorehouseResponse)(nil), // 30: stock.UpdateStorehouseResponse
	(*FindStorehouseResponse)(nil),   // 31: stock.FindStorehouseResponse
	(*CreatePurchaseResponse)(nil),   // 32: stock.CreatePurchaseResponse
	(*UpdatePurchaseResponse)(nil),   // 33: stock.UpdatePurchaseResponse
	(*FindPurchaseResponse)(nil),     // 34: stock.FindPurchaseResponse
	(*UpdateInventoryResponse)(nil),  // 35: stock.UpdateInventoryResponse
	(*FindInventoryResponse)(nil),    // 36: stock.FindInventoryResponse
}
var file_stock_grpc_proto_depIdxs = []int32{
	0,  // 0: stock.StockSystem.Ping:input_type -> stock.PingPong
	1,  // 1: stock.StockSystem.CreateCommodity:input_type -> stock.CreateCommodityRequest
	2,  // 2: stock.StockSystem.UpdateCommodity:input_type -> stock.UpdateCommodityRequest
	3,  // 3: stock.StockSystem.FindCommodity:input_type -> stock.FindCommodityRequest
	4,  // 4: stock.StockSystem.CreateSpec:input_type -> stock.CreateSpecRequest
	5,  // 5: stock.StockSystem.UpdateSpec:input_type -> stock.UpdateSpecRequest
	6,  // 6: stock.StockSystem.FindSpec:input_type -> stock.FindSpecRequest
	7,  // 7: stock.StockSystem.CreateSupplier:input_type -> stock.CreateSupplierRequest
	8,  // 8: stock.StockSystem.UpdateSupplier:input_type -> stock.UpdateSupplierRequest
	9,  // 9: stock.StockSystem.DeleteSupplier:input_type -> stock.DeleteSupplierRequest
	10, // 10: stock.StockSystem.FindSupplier:input_type -> stock.FindSupplierRequest
	11, // 11: stock.StockSystem.CreateStorehouse:input_type -> stock.CreateStorehouseRequest
	12, // 12: stock.StockSystem.UpdateStorehouse:input_type -> stock.UpdateStorehouseRequest
	13, // 13: stock.StockSystem.FindStorehouse:input_type -> stock.FindStorehouseRequest
	14, // 14: stock.StockSystem.CreatePurchase:input_type -> stock.CreatePurchaseRequest
	15, // 15: stock.StockSystem.UpdatePurchase:input_type -> stock.UpdatePurchaseRequest
	16, // 16: stock.StockSystem.FindPurchase:input_type -> stock.FindPurchaseRequest
	17, // 17: stock.StockSystem.UpdateInventory:input_type -> stock.UpdateInventoryRequest
	18, // 18: stock.StockSystem.FindInventory:input_type -> stock.FindInventoryRequest
	0,  // 19: stock.StockSystem.Ping:output_type -> stock.PingPong
	19, // 20: stock.StockSystem.CreateCommodity:output_type -> stock.CreateCommodityResponse
	20, // 21: stock.StockSystem.UpdateCommodity:output_type -> stock.UpdateCommodityResponse
	21, // 22: stock.StockSystem.FindCommodity:output_type -> stock.FindCommodityResponse
	22, // 23: stock.StockSystem.CreateSpec:output_type -> stock.CreateSpecResponse
	23, // 24: stock.StockSystem.UpdateSpec:output_type -> stock.UpdateSpecResponse
	24, // 25: stock.StockSystem.FindSpec:output_type -> stock.FindSpecResponse
	25, // 26: stock.StockSystem.CreateSupplier:output_type -> stock.CreateSupplierResponse
	26, // 27: stock.StockSystem.UpdateSupplier:output_type -> stock.UpdateSupplierResponse
	27, // 28: stock.StockSystem.DeleteSupplier:output_type -> stock.DeleteSupplierResponse
	28, // 29: stock.StockSystem.FindSupplier:output_type -> stock.FindSupplierResponse
	29, // 30: stock.StockSystem.CreateStorehouse:output_type -> stock.CreateStorehouseResponse
	30, // 31: stock.StockSystem.UpdateStorehouse:output_type -> stock.UpdateStorehouseResponse
	31, // 32: stock.StockSystem.FindStorehouse:output_type -> stock.FindStorehouseResponse
	32, // 33: stock.StockSystem.CreatePurchase:output_type -> stock.CreatePurchaseResponse
	33, // 34: stock.StockSystem.UpdatePurchase:output_type -> stock.UpdatePurchaseResponse
	34, // 35: stock.StockSystem.FindPurchase:output_type -> stock.FindPurchaseResponse
	35, // 36: stock.StockSystem.UpdateInventory:output_type -> stock.UpdateInventoryResponse
	36, // 37: stock.StockSystem.FindInventory:output_type -> stock.FindInventoryResponse
	19, // [19:38] is the sub-list for method output_type
	0,  // [0:19] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_stock_grpc_proto_init() }
func file_stock_grpc_proto_init() {
	if File_stock_grpc_proto != nil {
		return
	}
	file_stock_commodity_proto_init()
	file_stock_spec_proto_init()
	file_stock_supplier_proto_init()
	file_stock_storehouse_proto_init()
	file_stock_purchase_order_proto_init()
	file_stock_inventory_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stock_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stock_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stock_grpc_proto_goTypes,
		DependencyIndexes: file_stock_grpc_proto_depIdxs,
		MessageInfos:      file_stock_grpc_proto_msgTypes,
	}.Build()
	File_stock_grpc_proto = out.File
	file_stock_grpc_proto_rawDesc = nil
	file_stock_grpc_proto_goTypes = nil
	file_stock_grpc_proto_depIdxs = nil
}
