// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: club/grpc.proto

package clubpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingPong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingPong) Reset() {
	*x = PingPong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingPong) ProtoMessage() {}

func (x *PingPong) ProtoReflect() protoreflect.Message {
	mi := &file_club_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingPong.ProtoReflect.Descriptor instead.
func (*PingPong) Descriptor() ([]byte, []int) {
	return file_club_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *PingPong) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_club_grpc_proto protoreflect.FileDescriptor

var file_club_grpc_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6c, 0x75, 0x62, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x63, 0x6c, 0x75, 0x62, 0x1a, 0x0f, 0x63, 0x6c, 0x75, 0x62, 0x2f, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x63, 0x6c, 0x75, 0x62, 0x2f, 0x72,
	0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6c, 0x75, 0x62, 0x2f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24,
	0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0xd1, 0x05, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x26, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x1a, 0x0e, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x09, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x75, 0x69, 0x62, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x16, 0x5a, 0x14, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_club_grpc_proto_rawDescOnce sync.Once
	file_club_grpc_proto_rawDescData = file_club_grpc_proto_rawDesc
)

func file_club_grpc_proto_rawDescGZIP() []byte {
	file_club_grpc_proto_rawDescOnce.Do(func() {
		file_club_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_club_grpc_proto_rawDescData)
	})
	return file_club_grpc_proto_rawDescData
}

var file_club_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_club_grpc_proto_goTypes = []interface{}{
	(*PingPong)(nil),               // 0: club.PingPong
	(*CreateClubRequest)(nil),      // 1: club.CreateClubRequest
	(*UpdateClubRequest)(nil),      // 2: club.UpdateClubRequest
	(*FindClubRequest)(nil),        // 3: club.FindClubRequest
	(*CreateRankRequest)(nil),      // 4: club.CreateRankRequest
	(*UpdateRankRequest)(nil),      // 5: club.UpdateRankRequest
	(*DeleteRankRequest)(nil),      // 6: club.DeleteRankRequest
	(*FindRankRequest)(nil),        // 7: club.FindRankRequest
	(*CreateCustomerRequest)(nil),  // 8: club.CreateCustomerRequest
	(*UpdateCustomerRequest)(nil),  // 9: club.UpdateCustomerRequest
	(*FindCustomerRequest)(nil),    // 10: club.FindCustomerRequest
	(*CreateClubResponse)(nil),     // 11: club.CreateClubResponse
	(*UpdateClubResponse)(nil),     // 12: club.UpdateClubResponse
	(*FindClubResponse)(nil),       // 13: club.FindClubResponse
	(*CreateRankResponse)(nil),     // 14: club.CreateRankResponse
	(*UpdateRankResponse)(nil),     // 15: club.UpdateRankResponse
	(*DeleteRankResponse)(nil),     // 16: club.DeleteRankResponse
	(*FindRankResponse)(nil),       // 17: club.FindRankResponse
	(*CreateCustomerResponse)(nil), // 18: club.CreateCustomerResponse
	(*UpdateCustomerResponse)(nil), // 19: club.UpdateCustomerResponse
	(*FindCustomerResponse)(nil),   // 20: club.FindCustomerResponse
}
var file_club_grpc_proto_depIdxs = []int32{
	0,  // 0: club.ClubSystem.Ping:input_type -> club.PingPong
	1,  // 1: club.ClubSystem.CreateClub:input_type -> club.CreateClubRequest
	2,  // 2: club.ClubSystem.UpdateClub:input_type -> club.UpdateClubRequest
	3,  // 3: club.ClubSystem.FindCluib:input_type -> club.FindClubRequest
	4,  // 4: club.ClubSystem.CreateRank:input_type -> club.CreateRankRequest
	5,  // 5: club.ClubSystem.UpdateRank:input_type -> club.UpdateRankRequest
	6,  // 6: club.ClubSystem.DeleteRank:input_type -> club.DeleteRankRequest
	7,  // 7: club.ClubSystem.FindRank:input_type -> club.FindRankRequest
	8,  // 8: club.ClubSystem.CreateCustomer:input_type -> club.CreateCustomerRequest
	9,  // 9: club.ClubSystem.UpdateCustomer:input_type -> club.UpdateCustomerRequest
	10, // 10: club.ClubSystem.FindCustomer:input_type -> club.FindCustomerRequest
	0,  // 11: club.ClubSystem.Ping:output_type -> club.PingPong
	11, // 12: club.ClubSystem.CreateClub:output_type -> club.CreateClubResponse
	12, // 13: club.ClubSystem.UpdateClub:output_type -> club.UpdateClubResponse
	13, // 14: club.ClubSystem.FindCluib:output_type -> club.FindClubResponse
	14, // 15: club.ClubSystem.CreateRank:output_type -> club.CreateRankResponse
	15, // 16: club.ClubSystem.UpdateRank:output_type -> club.UpdateRankResponse
	16, // 17: club.ClubSystem.DeleteRank:output_type -> club.DeleteRankResponse
	17, // 18: club.ClubSystem.FindRank:output_type -> club.FindRankResponse
	18, // 19: club.ClubSystem.CreateCustomer:output_type -> club.CreateCustomerResponse
	19, // 20: club.ClubSystem.UpdateCustomer:output_type -> club.UpdateCustomerResponse
	20, // 21: club.ClubSystem.FindCustomer:output_type -> club.FindCustomerResponse
	11, // [11:22] is the sub-list for method output_type
	0,  // [0:11] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_club_grpc_proto_init() }
func file_club_grpc_proto_init() {
	if File_club_grpc_proto != nil {
		return
	}
	file_club_club_proto_init()
	file_club_rank_proto_init()
	file_club_customer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_club_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingPong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_club_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_club_grpc_proto_goTypes,
		DependencyIndexes: file_club_grpc_proto_depIdxs,
		MessageInfos:      file_club_grpc_proto_msgTypes,
	}.Build()
	File_club_grpc_proto = out.File
	file_club_grpc_proto_rawDesc = nil
	file_club_grpc_proto_goTypes = nil
	file_club_grpc_proto_depIdxs = nil
}
